# Build the documentation on GitHub and publish on GitHub pages

name: ci
on:
  push:
    branches:
      - master
jobs:
  #deploy:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v2
  #    - uses: actions/setup-python@v2
  #      with:
  #        python-version: 3.x
  #    - run: pip install mkdocs-material
  #    - run: mkdocs gh-deploy --force
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    environment: ci
    if: github.ref == 'refs/heads/master'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/setup-python@v3
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BEFORE_BUILD: |
            if [[ ${{ matrix.os }} == 'macos-latest' ]]; then
              brew install libomp gcc
              brew info gcc
              ls /usr/local
              ls /usr/local/bin
              ls /usr/local/Cellar/gcc/13.1.0
              ls /usr/local/Cellar/gcc
            fi
            pip install scipy contourpy --prefer-binary
          CIBW_BEFORE_TEST: pip install scipy contourpy --prefer-binary
          CIBW_SKIP: cp36-* cp37-* pp* *win32 *i686 *musllinux* *aarch64 *ppc64le *s390x
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build-sdist:
    name: Create sources on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    environment: ci
    if: github.ref == 'refs/heads/master'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest]
        python-version: [ "3.10" ]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies Quantum-Kite
        run: python -m pip install wheel scipy matplotlib pytest cmake ninja build
      - name: Build wheel
        run: python -m build --sdist --outdir dist/
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz
   
#  testpypi:
#    name: Test upload on PyPi
#    environment: ci
#    if: github.ref == 'refs/heads/master'
#    permissions:
#      id-token: write
#    needs: [ build-wheels, build-sdist ]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download artefacts
#        uses: actions/download-artifact@v3
#        with:
#          name: artifact
#          path: dist
#      - name: Publish distribution ðŸ“¦ to Test PyPI
#        uses: pypa/gh-action-pypi-publish@release/v1
#        with:
#          repository-url: https://test.pypi.org/legacy/
#
#  pypi:
#    name: Publish to PyPi
#    environment: ci
#    if: (github.ref == 'refs/heads/master') && (github.repository_owner == 'BertJorissen')
#    permissions:
#      id-token: write
#    needs: [ testpypi ]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download artefacts
#        uses: actions/download-artifact@v3
#        with:
#          name: artifact
#          path: dist
#      - name: Publish distribution ðŸ“¦ to PyPI
#        uses: pypa/gh-action-pypi-publish@release/v1